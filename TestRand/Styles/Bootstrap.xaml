<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/TestRand;component/Styles/Window.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/TestRand;component/Styles/Label.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/TestRand;component/Styles/Panel.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/TestRand;component/Styles/Button.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/TestRand;component/Styles/DataGrid.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/TestRand;component/Styles/ProgressBar.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/TestRand;component/Styles/FormControl.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/TestRand;component/Styles/InputGroup.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/TestRand;component/Styles/Path.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/TestRand;component/Styles/ListBox.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="logoStyle" TargetType="Image">
        <Setter Property="Source" Value="Images/logo.png"></Setter>
        <Setter Property="Width" Value="60"></Setter>
        <Setter Property="Height" Value="60"></Setter>
    </Style>
    <Style x:Key="btn-close-window" TargetType="Button">
        <Setter Property="Width" Value="45"></Setter>
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <!--<Border x:Name="backCloseWindow" Padding="15,10,15,10" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >-->
                    <Border x:Name="backCloseWindow" Padding="15,10,15,10" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >
                        <Path Stroke="#D8D8D8" StrokeThickness="1" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="5,5">
                                        <PolyLineSegment Points="10,45"></PolyLineSegment>
                                    </PathFigure>
                                    <PathFigure StartPoint="10,5">
                                        <PolyLineSegment Points="5,45"></PolyLineSegment>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter Property="Background" TargetName="backCloseWindow">
                                <Setter.Value>
                                    <SolidColorBrush Color="Red"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn-maxsize" TargetType="Button">
        <Setter Property="Width" Value="45"></Setter>
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="backCloseWindow" Padding="15,10,15,10" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >
                        <Path Stroke="#D8D8D8" StrokeThickness="1" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="5,5">
                                        <PolyLineSegment Points="10,5 10,10 5,10 5,5"></PolyLineSegment>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter Property="Background" TargetName="backCloseWindow">
                                <Setter.Value>
                                    <SolidColorBrush Color="#3F3F41"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn-minisize" TargetType="Button">
        <Setter Property="Width" Value="45"></Setter>
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="backCloseWindow" Padding="15,10,15,10" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >
                        <Path Stroke="#D8D8D8" StrokeThickness="1" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="5,5">
                                        <PolyLineSegment Points="10,5"></PolyLineSegment>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter Property="Background" TargetName="backCloseWindow">
                                <Setter.Value>
                                    <SolidColorBrush Color="#3F3F41"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn-normal-size" TargetType="Button">
        <Setter Property="Width" Value="45"></Setter>
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="backCloseWindow" Padding="15,10,15,10" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >
                        <Path Stroke="#D8D8D8" StrokeThickness="1" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,2">
                                        <PolyLineSegment Points="4,2 4,6 0,6 0,2 2,2 2,0 6,0,6,4 4,4"></PolyLineSegment>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter Property="Background" TargetName="backCloseWindow">
                                <Setter.Value>
                                    <SolidColorBrush Color="#3F3F41"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn-labels-modify" TargetType="Button">
        <Setter Property="Foreground" Value="Red"></Setter>
        <Setter Property="Padding"  Value="0,0,0,0"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Border x:Name="btn" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGrid Header Style-->
    <Style TargetType="DataGrid">
        <!--网格线颜色-->
        <Setter Property="CanUserResizeColumns" Value="false"/>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="#d9d9d9" />
        <Setter Property="IsReadOnly" Value="True"></Setter>
        <Setter Property="CanUserAddRows" Value="False"></Setter>
        <Setter Property="CanUserDeleteRows" Value="False"></Setter>
        <Setter Property="CanUserSortColumns" Value="False"></Setter>
        <Setter Property="CanUserReorderColumns" Value="False"></Setter>
        <Setter Property="IsEnabled" Value="True"></Setter>
        <Setter Property="RowHeaderWidth" Value="0"></Setter>
        <Setter Property="BorderThickness" Value="1,1,0,0"></Setter>
        <Setter Property="AutoGenerateColumns" Value="True"></Setter>
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d9d9d9"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d9d9d9"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--datagrid相关样式-->
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <!--<Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="100" />
                            </Grid.ColumnDefinitions>-->
                    <Border BorderBrush="#d9d9d9" BorderThickness="0,0,1,1" >
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <!--</Grid>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridRow" x:Key="DatagridBaseRowStyle">
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--单元格样式-->
    <Style TargetType="DataGridCell">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <TextBlock TextAlignment="Left" VerticalAlignment="Center"  >
                           <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridCell" x:Key="BaseDataGridStyle">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <TextBlock Padding="5,0,5,0" TextAlignment="Left" VerticalAlignment="Center"  >
                           <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGridCell" x:Key="DataGridStyleCenter">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <TextBlock Padding="5,0,5,0" TextAlignment="Center" VerticalAlignment="Center"  >
                           <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EchoDataGridCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource BaseDataGridStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDamage}" Value="2">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#5CB85C"></SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDamage}" Value="1">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#F0AD4E"></SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDamage}" Value="0">
                <Setter Property="Foreground" >
                    <Setter.Value>
                        <SolidColorBrush Color="#D9534F"></SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridTextColumnCenterSytle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!--datagrid button-->
    <Style x:Key="DatagirdButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>